<project name="huawei-vcenter-plugin-service" default="make-jar-bundle">
   <description>
       Ant script to build huawei-vcenter-plugin-service.
       The output is a bundle in target/huawei-vcenter-plugin-service.jar that can be
       copied in the "plugins" folder of the plugin-package.
       -----------------------------------------------------------------------
       NOTE: in Eclipse/STS you can use the project builder directly.
       -----------------------------------------------------------------------
   </description>

   <!-- SDK folders should be set in environment variables -->
   <!--<property environment="env"/>-->
   <!--<property name="VSPHERE_SDK_HOME" value="${env.VSPHERE_SDK_HOME}"/>-->

   <!-- name of the jar output file -->
   <property name="JAR_FILE" value="huawei-vcenter-plugin-service.jar"/>
   <property name="ROOT_DIR" location="../../" />
   <property name="BUILD_DIR" value="${basedir}/target"/>
   <property name="CLASSES" value="${BUILD_DIR}/classes"/>
   <property name="RES_DIR" value="${basedir}/src/main/resources"/>

   <!-- clean the generated build files -->
   <target name="clean" description="Do not select this internal target.">
      <delete dir="${BUILD_DIR}" />
      <mkdir dir="${BUILD_DIR}/classes" />
   </target>
   
  <target name="classpaths" depends="clean">
    <path id="compile.classpath">
      <fileset dir="${ROOT_DIR}/open_source/logback" includes="logback-classic-*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/logback" includes="logback-core-*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/Simple Logging Facade for Java" includes="*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/jakarta Servlet" includes="jakarta.servlet-api-*.jar"/>
      <fileset dir="${ROOT_DIR}//vendor/vSphere Web Client SDK/vsphere-client-sdk/flex-client-sdk/vsphere-client/server/repository/usr" includes="*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/H2 Database Engine" includes="h2-*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/gson" includes="gson-*.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/Java Native Access" includes="jna-*.jar"/>
      <fileset dir="${ROOT_DIR}/src_bin" includes="esight-api-*.jar"/>
      <fileset dir="${ROOT_DIR}/vendor/vmware" includes="wssamples.jar"/>
      <fileset dir="${ROOT_DIR}/vendor/vmware" includes="samples-core-*.jar"/>
      <fileset dir="${ROOT_DIR}/vendor/vmware" includes="vim25.jar"/>
      <fileset dir="${ROOT_DIR}/vendor/vmware" includes="vsphere-client-lib.jar"/>
      <fileset dir="${ROOT_DIR}/open_source/Eclipse AspectJ" includes="aspectjweaver*.jar"/>
    </path>
   </target>

   <target name="compile-java" depends="classpaths" description="Do not select this internal target.">
      <javac target="1.7"  source="1.7"
             includeantruntime="false"
             destdir="${CLASSES}"
			 classpathref="compile.classpath"
             debug="true" encoding="UTF-8">
			 <src path="${basedir}/src/main/java"/>
			 <!-- <src path="${basedir}/src/test/java"/> for future test files -->
      </javac>
   </target>

   <!-- Build the jar -->
   <target name="make-jar-bundle" depends="compile-java"
           description="No need to use this script within Eclipse, use the native project builder!">
      <!-- Add resources -->
      <copy todir="${CLASSES}">
         <fileset dir="${RES_DIR}"/>
         <!-- third-party libraries -->
         <fileset dir="${ROOT_DIR}/open_source/H2 Database Engine" includes="h2-*.jar"/>
         <fileset dir="${ROOT_DIR}/src_bin" includes="esight-api-*.jar"/>
         <fileset dir="${ROOT_DIR}/open_source/gson" includes="gson-*.jar"/>
         <fileset dir="${ROOT_DIR}/open_source/Java Native Access" includes="jna-*.jar"/>
         <fileset dir="${ROOT_DIR}/vendor/vmware" includes="wssamples.jar"/>
         <fileset dir="${ROOT_DIR}/vendor/vmware" includes="samples-core-*.jar"/>
         <fileset dir="${ROOT_DIR}/vendor/vmware" includes="vim25.jar"/>
      </copy>

      <!-- Create the jar -->
      <jar  destfile="${BUILD_DIR}/${JAR_FILE}"
            manifest="${RES_DIR}/META-INF/MANIFEST.MF"
            basedir="${CLASSES}"/>

   </target>
</project>

